import json

# Открываем файл с данными о звездах в формате JSON
with open("stars.json", "r", encoding="UTF-8") as file:
    data = json.load(file)  # Загружаем данные из файла в переменную data

count = 0  # Переменная для подсчета количества выполненных операций

while True:  # Бесконечный цикл для работы с пользователем
    print("""
    Меню:
    1 - Вывести все записи
    2 - Вывести запись по полю
    3 - Добавить запись
    4 - Удалить запись по полю
    5 - Выйти из программы
    """)

    n = int(input("Введите номер пункта: "))  # Получаем выбор пользователя

    if n == 1:  # Если пользователь выбрал пункт 1 - Вывести все записи
        for star in data:  # Проходим по всем звездам в данных
            print(f"""
            Номер записи: {star['id']},
            Общее название звезды: {star['name']},
            Название созвездия: {star['constellation']},
            Можно ли увидеть звезду без телескопа: {star['is_visible']},
            Солнечный радиус звезды: {star['radius']},
            """)
        count += 1  # Увеличиваем счетчик операций

    elif n == 2:  # Если пользователь выбрал пункт 2 - Вывести запись по полю
        search = input("Введите id: ")  # Получаем ID для поиска

        for i, star in enumerate(data):  # Проходим по всем звездам и их индексам
            if star['id'] == search:  # Если нашли звезду с нужным ID
                print(f"""
            Номер записи: {star['id']},
            Общее название звезды: {star['name']},
            Название созвездия: {star['constellation']},
            Можно ли увидеть звезду без телескопа: {star['is_visible']},
            Солнечный радиус звезды: {star['radius']},
            """)
                print(f"Позиция в словаре: {i}")  # Выводим позицию звезды в списке данных
                break
        else:
            print("Не найдено")  # Если звезда не найдена
        count += 1  # Увеличиваем счетчик операций

    elif n == 3:  # Если пользователь выбрал пункт 3 - Добавить запись
        new_id = int(input("Введите id: "))  # Получаем новый ID
        for star in data:  # Проверяем, есть ли уже звезда с таким ID
            if star['id'] == new_id:
                print("Звезда уже добавлена")
                break
        else:
            # Получаем данные о новой звезде от пользователя
            new_name = str(input("Название звезды: "))
            new_constellation = str(input("Название созвездия: "))
            new_is_visible = bool(input("Можно ли увидеть звезду без телескопа: "))
            new_radius = float(input("Солнечный радиус звезды: "))

            # Создаем новый словарь с данными о звезде
            new_star = {
                "id": new_id,
                "name": new_name,
                "constellation": new_constellation,
                "is_visible": new_is_visible,
                "radius": new_radius
            }

            data.append(new_star)  # Добавляем новую звезду в список данных
            with open("stars.json", "w", encoding="UTF-8") as new_file:  # Сохраняем изменения в файл
                json.dump(data, new_file, ensure_ascii=False, indent=4)
            print("Запись добавлена")
        
        count += 1  # Увеличиваем счетчик операций

    elif n == 4:  # Если пользователь выбрал пункт 4 - Удалить запись по полю
        del_id = int(input("Введите id для удаления: "))  # Получаем ID для удаления
        for star in data:  # Проверяем, есть ли звезда с таким ID
            if star['id'] == del_id:
                data.remove(star)  # Удаляем звезду из списка данных
                with open("stars.json", "w", encoding="UTF-8") as new_file:  # Сохраняем изменения в файл
                    json.dump(data, new_file, ensure_ascii=False, indent=4)
                print("Запись удалена")
                break
        else:
            print("Запись не найдена")  # Если звезда не найдена
        count += 1  # Увеличиваем счетчик операций

    elif n == 5:  # Если пользователь выбрал пункт 5 - Выйти из программы
        print("Выход из программы")
        print("Количество выполненных операций с записями: ", count)  # Выводим количество выполненных операций
        break  # Прерываем цикл и выходим из программы

    else:
        print("Ошибка")  # Если введен неправильный номер пункта
